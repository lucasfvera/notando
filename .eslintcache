[{"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\index.js":"1","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\App.js":"2","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\config\\config.js":"3","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\index.js":"4","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\button-component\\button.jsx":"5","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\empty-card-component\\emptyCard.jsx":"6","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\card-list-component\\cardList.jsx":"7","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\form-component\\form.jsx":"8","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\card-component\\card.jsx":"9","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\google-login\\googleLogin.js":"10","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\google-logout\\googleLogout.jsx":"11","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\config\\googleClientID.js":"12","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\home-component\\home.tsx":"13","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\contexts\\loading-context\\loadingContext.tsx":"14","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\contexts\\user-context\\userContext.tsx":"15","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\body-component\\index.ts":"16","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\login-form-user-component\\index.ts":"17","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\body-component\\body.tsx":"18","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\login-form-user-component\\userLoginForm.tsx":"19","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\contexts\\feature-flags-context\\featureFlagsContext.tsx":"20","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\feature-controller-component\\index.tsx":"21","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\feature-controller-component\\featureController.tsx":"22","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\home-component\\index.ts":"23","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\login-form\\loginForm.tsx":"24","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\features-toggle-component\\index.tsx":"25","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\features-toggle-component\\featureToggle.tsx":"26"},{"size":346,"mtime":1618083761981,"results":"27","hashOfConfig":"28"},{"size":528,"mtime":1618104740094,"results":"29","hashOfConfig":"28"},{"size":343,"mtime":1608258450998,"results":"30","hashOfConfig":"28"},{"size":1065,"mtime":1618107205108,"results":"31","hashOfConfig":"28"},{"size":0,"mtime":1608236441014,"results":"32","hashOfConfig":"28"},{"size":358,"mtime":1610745484224,"results":"33","hashOfConfig":"28"},{"size":599,"mtime":1611591390300,"results":"34","hashOfConfig":"28"},{"size":2001,"mtime":1618083761867,"results":"35","hashOfConfig":"28"},{"size":2418,"mtime":1618083761855,"results":"36","hashOfConfig":"28"},{"size":1228,"mtime":1618083761883,"results":"37","hashOfConfig":"28"},{"size":671,"mtime":1618083761906,"results":"38","hashOfConfig":"28"},{"size":121,"mtime":1618083761973,"results":"39","hashOfConfig":"28"},{"size":3651,"mtime":1618083761921,"results":"40","hashOfConfig":"28"},{"size":509,"mtime":1618095299173,"results":"41","hashOfConfig":"28"},{"size":680,"mtime":1618083761979,"results":"42","hashOfConfig":"28"},{"size":28,"mtime":1618083761838,"results":"43","hashOfConfig":"28"},{"size":45,"mtime":1618083761942,"results":"44","hashOfConfig":"28"},{"size":1137,"mtime":1618107220470,"results":"45","hashOfConfig":"28"},{"size":1788,"mtime":1618083761949,"results":"46","hashOfConfig":"28"},{"size":2013,"mtime":1618107265571,"results":"47","hashOfConfig":"28"},{"size":55,"mtime":1618105428946,"results":"48","hashOfConfig":"28"},{"size":697,"mtime":1618105488235,"results":"49","hashOfConfig":"28"},{"size":27,"mtime":1618083761924,"results":"50","hashOfConfig":"28"},{"size":1139,"mtime":1618108083862,"results":"51","hashOfConfig":"28"},{"size":47,"mtime":1618106369506,"results":"52","hashOfConfig":"28"},{"size":858,"mtime":1618108028361,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"t544gd",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\index.js",[],["116","117"],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\App.js",["118","119"],"import React, { useContext } from \"react\";\r\n//importing feature flags context\r\nimport {\r\n  UserContextProvider,\r\n  FeatureFlagsContextProvider,\r\n  LoadingContext,\r\n  Body\r\n} from \"./components\";\r\n\r\n//instalo firebase con \"npm i firebase\"\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useContext(LoadingContext);\r\n    return (\r\n      <FeatureFlagsContextProvider>\r\n        <UserContextProvider>\r\n            <Body />\r\n        </UserContextProvider>\r\n      </FeatureFlagsContextProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\config\\config.js",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\index.js",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\button-component\\button.jsx",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\empty-card-component\\emptyCard.jsx",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\card-list-component\\cardList.jsx",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\form-component\\form.jsx",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\card-component\\card.jsx",["120"],"import React from 'react';\r\nimport '../../App.css';\r\nimport './card.css';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst Card = ({ note, removeNote, editNote }) => {\r\n\t// console.log(note);\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst [editedContent, setEditedContent] = React.useState(note.content);\r\n\tlet newNote = {}\t\r\n  \r\n\tconst handleClose = () => {\r\n\t  setEditedContent(note.content)\r\n\t  setOpen(false);\r\n\t};\r\n\r\n\tconst handleFieldChange = (e)=>{\r\n\t\tsetEditedContent(e.target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = async ()=>{\r\n\t\tnewNote[note.id] = editedContent\r\n\t\t// const obj = await new Promise((res,err)=>{\r\n\t\t// \t({noteId: editedContent})\r\n\t\t// \tres(\"Async\")\r\n\t\t// })\r\n\t\teditNote(newNote);\r\n\t\tsetOpen(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='cardContainer'>\r\n\t\t\t<p className='regular-text'>{note.content} </p>\r\n\t\t\t<button className='action-btn' onClick={() => {setOpen(true)}}>\r\n\t\t\t\t<EditIcon fontSize='small' />\r\n\t\t\t</button>\r\n\t\t\t<Dialog open={open} onClose={()=>handleClose} aria-labelledby=\"form-dialog-title\">\r\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">Editá tu nota</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t{/* <DialogContentText>\r\n\t\t\t\t\tTo subscribe to this website, please enter your email address here. We will send updates\r\n\t\t\t\t\toccasionally.\r\n\t\t\t\t\t</DialogContentText> */}\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\tid=\"note\"\r\n\t\t\t\t\tlabel=\"Note content\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={editedContent}\r\n\t\t\t\t\tonChange={handleFieldChange}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose} color=\"secondary\">\r\n\t\t\t\t\tCancelar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={handleSubmit} variant='contained' disableElevation color=\"primary\">\r\n\t\t\t\t\tEditar\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t\t<button className='action-btn' onClick={() => removeNote(note.id)}>\r\n\t\t\t\t<CloseIcon fontSize='small' />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { Card };\r\n","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\google-login\\googleLogin.js",["121"],"import React, { useContext } from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport clientId from \"../../config/googleClientID\";\r\nimport { UserContext } from '../index'\r\n\r\n\r\nconst GoogleBtnLogin = ()=>{\r\n  const [user,setUser] = useContext(UserContext);\r\n\r\n  function onSignIn(googleUser) {\r\n      var profile = googleUser.getBasicProfile();\r\n      setUser({name: profile.getName(), email: profile.getEmail(), isLogged: true });\r\n      // console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\r\n      // console.log('Name: ' + profile.getName());\r\n      // console.log('Image URL: ' + profile.getImageUrl());\r\n      // console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\r\n      // console.log(\"Todo el obj de usuario: \",googleUser);\r\n    }\r\n\r\n    return <GoogleLogin\r\n    // render={props=>{return <button onClick={()=>console.log(this)} >Hola</button>}}\r\n    clientId={clientId}\r\n    buttonText={'Entrar con Google'}\r\n    onSuccess={(e)=>onSignIn(e)}\r\n    onFailure={err=>console.log(\"Sucedió el siguiente error: \",err)}\r\n    cookiePolicy={\"single_host_origin\"}\r\n    isSignedIn={true}\r\n    />\r\n}\r\n\r\nexport {GoogleBtnLogin};","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\google-logout\\googleLogout.jsx",["122"],"import React, { useContext } from \"react\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\nimport clientId from \"../../config/googleClientID\";\r\nimport { UserContext } from \"../index\";\r\nimport './googleLogout.css'\r\n\r\nconst GoogleBtnLogout = () => {\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const logout = () => {\r\n    setUser({ name: \"Invitado\", email: \"\", isLogged: false });\r\n    console.log(\"Sesión terminada exitosamente!\");\r\n  };\r\n\r\n  return (\r\n    <GoogleLogout\r\n      buttonText={\"Salir\"}\r\n      clientId={clientId}\r\n      className='google-btn-logout'\r\n      onLogoutSuccess={() => logout()}\r\n    />\r\n  );\r\n};\r\n\r\nexport { GoogleBtnLogout };\r\n","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\config\\googleClientID.js",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\home-component\\home.tsx",["123","124","125","126"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport { DB_FIREBASE } from \"../../config/config.js\";\r\n\r\nimport { UserContext, LoadingContext, CardList, Form } from '../index'\r\n\r\ntype Note = {\r\n    id: string;\r\n    content: string\r\n}\r\n\r\n\r\n//---inicio la base de datos y guardo la referencia en database\r\nfirebase.initializeApp(DB_FIREBASE);\r\n//esta referencia es a la base de datos en tiempo real\r\nconst notesDatabase = firebase.database().ref(\"/notes/\");\r\n\r\nexport const Home: React.FunctionComponent = ()=>{\r\n    const [user, setUser] = useContext(UserContext);\r\n    const [loading, setLoading] = useContext(LoadingContext);\r\n\r\n    const [numberOfRenders, setNumberOfRenders] = useState(0);\r\n    const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n\r\n    const loadNotes = async () => {\r\n        const nuevasNotas: Note[] = [];\r\n        const promise1 = new Promise((resolve,reject)=>{\r\n            notesDatabase.on(\"value\", (element) => {\r\n                if(!element.numChildren()) resolve(nuevasNotas);\r\n            })\r\n            notesDatabase.on(\"child_added\", (element) => {\r\n                if(element.key){\r\n                    nuevasNotas.push({\r\n                    id: element.key,\r\n                    content: element.val(),\r\n                    });\r\n                resolve(nuevasNotas);\r\n                }\r\n            })\r\n        });\r\n        await promise1.then(res=>setNotes(res as Note[]))\r\n        setLoading(false);\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n    loadNotes();\r\n    console.log(\"Effect completed!\");\r\n    }, [numberOfRenders]);\r\n    \r\n      // //---agrego una nota ---DEPRECATED\r\n      // const addNote2 = (content) => {\r\n      //   notesDatabase.push().set({ content });\r\n      //   notesDatabase.on(\"child_added\", (el) => {\r\n      //   // console.log(el.val());\r\n        //   // console.log(el.key);\r\n        //   // console.log(content);\r\n        //   if(el.val().content===content){\r\n        // \t  setNotes([...notes,{id:el.key,content}],console.log(\"Note added!\"))\r\n        //   }\r\n      //   });\r\n      //   // setNotes([...notes, { id: notes.length, content: content }]);\r\n      // };\r\n    \r\n    //---PRUEBA ADD NOTE\r\n    const addNote = (content: string) => {\r\n    notesDatabase.push(content)\r\n    // cambio este estado para que vuelva a ejecutarse el useEffect y q cargue de nuevo las notas de la base de datos\r\n    setNumberOfRenders(numberOfRenders + 1)\r\n    \r\n        \r\n          // .then(e=>\r\n          //   {\r\n          //     // console.log(e.path.pieces_[1]) -> acá tengo la id de la nota recien agregada\r\n          //     setNotes(prevNotes => [...prevNotes,{id:e.path.pieces_[1],content}],console.log(\"Note added!\"))\r\n          //   })\r\n    }\r\n    \r\n    //---borro una nota\r\n    const removeNote = (id: string) => {\r\n    if(window.confirm(\"¿Eliminar la nota?\")){\r\n\r\n        notesDatabase.child(id).remove();\r\n        //Hago q se ejecute devuelta el loadNotes()\r\n        setNumberOfRenders(numberOfRenders + 1)\r\n    }\r\n    };\r\n    \r\n    //---EDITAR NOTA\r\n    const editNote = (newContent: string)=>{\r\n    notesDatabase.update(newContent)\r\n    setNumberOfRenders(numberOfRenders + 1)\r\n    }\r\n    \r\n    return (\r\n        <div className='bodyContainer' >\r\n            <div className=\"centerContainer\">\r\n                <h3 className=\"subheader-text\">Tus notas</h3>\r\n                <CardList notes={notes} removeNote={removeNote} editNote={editNote}/>\r\n            </div>\r\n            <div className=\"footerContainer\">\r\n                <Form addNote={addNote} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n",["127","128"],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\contexts\\loading-context\\loadingContext.tsx",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\contexts\\user-context\\userContext.tsx",["129"],"import React, {createContext, useState, FunctionComponent, ContextType} from 'react';\r\n\r\ntype User = { \r\n    name: string;\r\n    email: string;\r\n    isLogged: boolean;\r\n}\r\n\r\nconst anonUser : User = {\r\n    name: \"Invitado\",\r\n    email: \"\",\r\n    isLogged: false\r\n}\r\n\r\nexport const UserContext = createContext<[User,Function]>([anonUser,()=>{}]); //add a default value when no provider is in the tree\r\n\r\nexport const UserContextProvider: FunctionComponent<FunctionComponent> = ({children})=>{\r\n    const [user, setUser] = useState(anonUser)\r\n\r\n\r\n    return(\r\n        <UserContext.Provider value={[user,setUser]}>\r\n            {children}\r\n        </UserContext.Provider>\r\n\r\n    );\r\n}\r\n","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\body-component\\index.ts",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\login-form-user-component\\index.ts",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\body-component\\body.tsx",["130"],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\login-form-user-component\\userLoginForm.tsx",["131"],"import React, { useState, useContext } from \"react\";\r\nimport \"./userLoginForm.css\";\r\nimport { UserContext } from \"../index\";\r\n\r\ninterface User {\r\n  name: string;\r\n  password: string;\r\n}\r\n\r\nexport const UserLoginForm = () => {\r\n  const [user,setUser] = useContext(UserContext);\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [userpassword, setUserpassword] = useState<string>(\"\");\r\n\r\n  const handleSubmit: (val: React.FormEvent) => void = (event) => {\r\n    event.preventDefault();\r\n    const obj: User = { name: username, password: userpassword };\r\n    console.log(obj);\r\n    setUser({name: obj.name,email:'',isLogged: true})\r\n    setUsername(\"\");\r\n    setUserpassword(\"\");\r\n  };\r\n\r\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setUsername(e.target.value);\r\n  const handlePasswordChange: (\r\n    val: React.ChangeEvent<HTMLInputElement>\r\n  ) => void = (e) => setUserpassword(e.target.value);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"user-login-form-container\" onSubmit={(e) => handleSubmit(e)}>\r\n        <label className='user-login-form-label' htmlFor=\"username\">Usuario</label>\r\n        <input\r\n        className=\"user-login-form-input\"\r\n          id=\"username\"\r\n          type=\"text\"\r\n          value={username}\r\n          required\r\n          onChange={(e) => handleUsernameChange(e)}\r\n        />\r\n        <label className='user-login-form-label' htmlFor=\"password\">Contraseña</label>\r\n        <input\r\n        className=\"user-login-form-input\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          value={userpassword}\r\n          required\r\n          onChange={(e) => handlePasswordChange(e)}\r\n        />\r\n        <button className='user-login-form-btn' type=\"submit\">Entrar</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\contexts\\feature-flags-context\\featureFlagsContext.tsx",["132","133"],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\feature-controller-component\\index.tsx",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\feature-controller-component\\featureController.tsx",["134"],"import React, { useContext } from 'react'\r\nimport { FeatureFlagsContext } from '../index'\r\n\r\n// types\r\nimport { FeatureNames } from '../../contexts/feature-flags-context/featureFlagsContext';\r\n\r\ninterface FeatureProps {\r\n    name: FeatureNames;\r\n    children: JSX.Element;\r\n    fallback?: JSX.Element;\r\n}\r\n\r\nconst fallbackmsg = <div>Service temporally unavailable. We´re working to fix it!</div>\r\n\r\nconst FeatureController = ({ name, children, fallback = fallbackmsg } : FeatureProps) => {\r\n    const [features, dispatch]= useContext(FeatureFlagsContext);\r\n\r\n    if (features && features[name].enabled) {\r\n        return children;\r\n    }\r\n\r\n    return fallback;\r\n};\r\n\r\nexport {FeatureController};","E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\home-component\\index.ts",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\login-form\\loginForm.tsx",["135"],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\features-toggle-component\\index.tsx",[],"E:\\Lucas\\Programacion\\curso-react-firebase\\frontend\\src\\components\\features-toggle-component\\featureToggle.tsx",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":13,"column":10,"nodeType":"144","messageId":"145","endLine":13,"endColumn":17},{"ruleId":"142","severity":1,"message":"146","line":13,"column":19,"nodeType":"144","messageId":"145","endLine":13,"endColumn":29},{"ruleId":"142","severity":1,"message":"147","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":25},{"ruleId":"142","severity":1,"message":"148","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":14},{"ruleId":"149","severity":1,"message":"148","line":20,"column":12,"nodeType":"144","messageId":"145","endLine":20,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":20,"column":18,"nodeType":"144","messageId":"145","endLine":20,"endColumn":25},{"ruleId":"149","severity":1,"message":"143","line":21,"column":12,"nodeType":"144","messageId":"145","endLine":21,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":51,"column":8,"nodeType":"153","endLine":51,"endColumn":25,"suggestions":"154"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"149","severity":1,"message":"155","line":1,"column":60,"nodeType":"144","messageId":"145","endLine":1,"endColumn":71},{"ruleId":"149","severity":1,"message":"150","line":6,"column":16,"nodeType":"144","messageId":"145","endLine":6,"endColumn":23},{"ruleId":"149","severity":1,"message":"148","line":11,"column":10,"nodeType":"144","messageId":"145","endLine":11,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":50,"column":13,"nodeType":"158","messageId":"159","endLine":50,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":58,"column":13,"nodeType":"158","messageId":"159","endLine":58,"endColumn":19},{"ruleId":"149","severity":1,"message":"160","line":16,"column":22,"nodeType":"144","messageId":"145","endLine":16,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":18,"column":16,"nodeType":"144","messageId":"145","endLine":18,"endColumn":23},{"ruleId":"149","severity":1,"message":"161","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":14},{"ruleId":"149","severity":1,"message":"162","line":9,"column":15,"nodeType":"144","messageId":"145","endLine":9,"endColumn":24},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","'DialogContentText' is defined but never used.","'user' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadNotes'. Either include it or remove the dependency array.","ArrayExpression",["165"],"'ContextType' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'dispatch' is assigned a value but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [loadNotes, numberOfRenders]",{"range":"168","text":"169"},[1627,1644],"[loadNotes, numberOfRenders]"]